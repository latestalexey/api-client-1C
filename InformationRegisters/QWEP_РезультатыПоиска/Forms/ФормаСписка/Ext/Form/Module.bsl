
&НаКлиенте
Процедура Поиск(Команда)
	
	Если СтрДлина(РеквизитАртикулПоиска) < 4 Тогда
		Сообщить("Укажите артикул, не менее 4 символов");
		Возврат;
	КонецЕсли; 
	
	ПараметрыЗапроса = Новый Структура;
    ПараметрыЗапроса.Вставить("article", 			РеквизитАртикулПоиска);
    ПараметрыЗапроса.Вставить("brand", 				РеквизитБрендПоиска);
    ПараметрыЗапроса.Вставить("timeout", 			РеквизитТаймаут * 1000);
    ПараметрыЗапроса.Вставить("excludePromo", 		РеквизитИсключитьПромо);
    ПараметрыЗапроса.Вставить("flatView", 			РеквизитПлоскийВид);
    ПараметрыЗапроса.Вставить("type", 				?(РеквизитАсинхронныйЗапрос, 1, 0));
    ИдентификаторПоиска = "";
    НетТокена = Ложь;
    QWEP_Клиент.ВыполнитьПоиск(ПараметрыЗапроса, ИдентификаторПоиска, НетТокена);
    Если НетТокена Тогда        	
        СтруктураПараметров = Новый Структура;
        СтруктураПараметров.Вставить("ПараметрыЗапроса", ПараметрыЗапроса);        
        СтруктураПараметров.Вставить("ИдентификаторПоиска", ИдентификаторПоиска);
        ОповещениеПослеВвода = Новый ОписаниеОповещения("ПослеВводаКодаАвторизации", ЭтаФорма, СтруктураПараметров);
        ПоказатьВводСтроки(ОповещениеПослеВвода, , "Введите код авторизации для получения нового Токена", 36, Ложь);
    Иначе
        ПоискЗавершен = Ложь;
        ПополнитьРезультаты();
        Элементы.Список.Обновить();        
    КонецЕсли;     
    
КонецПроцедуры

&НаКлиенте
Процедура ПослеВводаКодаАвторизации(КодАвторизации, ДополнительныеПараметры) Экспорт
    
    ОчиститьСообщения();
    ДополнительныеПараметры.Вставить("ТокенУспешноПолучен", Ложь);
    QWEP_Клиент.ПолучитьAccessToken(КодАвторизации, ДополнительныеПараметры);
    
    Если ДополнительныеПараметры.ТокенУспешноПолучен Тогда        
        QWEP_Клиент.ВыполнитьПоиск(ДополнительныеПараметры.ПараметрыЗапроса, ДополнительныеПараметры.ИдентификаторПоиска);        
        ПоискЗавершен = Ложь;
        ПополнитьРезультаты();
        Элементы.Список.Обновить();    
    КонецЕсли;

КонецПроцедуры  

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	РеквизитПлоскийВид = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьРезультаты(Команда)
	
	ПополнитьРезультаты();
	
КонецПроцедуры

&НаКлиенте
Процедура ПополнитьРезультаты()
	
	Если НЕ РеквизитАсинхронныйЗапрос ИЛИ ПустаяСтрока(ИдентификаторПоиска) Тогда
		Возврат;	
	КонецЕсли;
	ПараметрыЗапроса = Новый Структура;
	ПараметрыЗапроса.Вставить("searchId", 			ИдентификаторПоиска);
	ПараметрыЗапроса.Вставить("flatView", 			РеквизитПлоскийВид);
	QWEP_Клиент.ПолучитьГотовуюПорциюРезультатов(ПараметрыЗапроса, ИдентификаторПоиска, Ложь, ПоискЗавершен);
	Элементы.Список.Обновить();
	Если НЕ ПустаяСтрока(ИдентификаторПоиска) Тогда
		ПодключитьОбработчикОжидания("ПополнитьРезультаты", 3, Истина);	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
    
    СтандартнаяОбработка = Ложь;
	Если НЕ Поле.Имя = "Действие" Тогда
		Возврат;	
	КонецЕсли;
	ТекущаяСтрока = Элемент.ТекущиеДанные;
	Если ТекущаяСтрока.ЭтоУточнение Тогда
		РаскрытьУточнение(ТекущаяСтрока);
    ИначеЕсли НЕ ПустаяСтрока(ТекущаяСтрока.ИдентификаторСтроки) И ТекущаяСтрока.Действие = "Купить" Тогда
        ДобавитьВКорзину(Неопределено);
    КонецЕсли;
    Элементы.Список.Обновить();
    
КонецПроцедуры

&НаКлиенте
Процедура РаскрытьУточнение(ТекущаяСтрока)

    ПараметрыЗапроса = Новый Структура;
    ПараметрыЗапроса.Вставить("flatView", 			РеквизитПлоскийВид);
    ПараметрыЗапроса.Вставить("clarificationId", 	ТекущаяСтрока.ИдентификаторУточнения);
    ПараметрыЗапроса.Вставить("type", 				0); //Раскрываем уточнения синхронно
    
    QWEP_Клиент.РаскрытьУточнение(ПараметрыЗапроса);
    QWEP_Сервер.УдалитьСтрокуРСРезультатыПоиска(ТекущаяСтрока.ИдентификаторСтроки);
	

КонецПроцедуры


&НаКлиенте
Процедура ДобавитьВКорзину(Команда)
    
    Количество = 1;    
    ПоказатьВводЧисла(Новый ОписаниеОповещения("ДобавитьВКорзинуПослеВвода", ЭтотОбъект, ), Количество, "Введите необходимое количество"); 
    
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВКорзинуПослеВвода(Число, ДополнительныеПараметры) Экспорт
    
    Если НЕ Число = Неопределено И Число > 0 Тогда
		ТекущаяСтрока = Элементы.Список.ТекущиеДанные;
        Если ТекущаяСтрока = Неопределено Тогда                	
            Возврат;
        КонецЕсли;          
        
        ПараметрыЗапроса = Новый Структура;
        ПараметрыЗапроса.Вставить("itemId", 			ТекущаяСтрока.ИдентификаторСтроки);
        ПараметрыЗапроса.Вставить("quantity", 	        Число);
        ПараметрыЗапроса.Вставить("comment", 	        "Тестовый комментарий API"); 
        ПараметрыЗапроса.Вставить("type", 				0); //Раскрываем уточнения синхронно
		
		УспешноДобавлен = QWEP_Клиент.ДобавитьВКорзину(ПараметрыЗапроса);
        Если УспешноДобавлен Тогда                	
            Сообщить("Товар успешно добавлен в корзину");
        Иначе
            Сообщить("Во время добавления товара в корзину возникли ошибки");
		КонецЕсли; 
    КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ФорматОбменаДанными = Константы.QWEP_ФорматОбменаДанными.Получить();
	Если НЕ ЗначениеЗаполнено(ФорматОбменаДанными) Тогда
		Константы.QWEP_ФорматОбменаДанными.Установить("json");
	КонецЕсли;

КонецПроцедуры
